<Application xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="CleverEver.Phone.App"
             xmlns:components="clr-namespace:CleverEver.Controls;assembly=CleverEver.Phone"
             xmlns:xamarin="clr-namespace:Xamarin.Forms;assembly=Xamarin.Forms.Core"
             xmlns:ff="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             xmlns:artina="clr-namespace:UXDivers.Artina.Shared;assembly=UXDivers.Artina.Shared"
             xmlns:converters="clr-namespace:CleverEver.Phone.Converters;assembly=CleverEver.Phone"
             xmlns:artinaConverters="clr-namespace:UXDivers.Artina.Grial;assembly=UXDivers.Artina.Grial">
  <Application.Resources>

    <!-- http://developer.xamarin.com/guides/cross-platform/xamarin-forms/working-with/styles/ -->

    <ResourceDictionary>
      <converters:NonNullObjectCheckerConverter x:Key="NonNullObjectCheckerConverter" />
      <converters:NonEmptyStringCheckerConverter x:Key="NonEmptyStringCheckerConverter" />
      <converters:NonEmptyCollectionCheckerConverter x:Key="NonEmptyCollectionCheckerConverter" />
      <converters:BooleanNegateConverter x:Key="BooleanNegateConverter" />

      <!-- 

				EXPORTED COLORS

				Everytime you change any of the exported colors
				you MUST compile (Right click on "Colors.tt" > Tools > Process T4 Templates)
				to see your changes on your App
			-->


      <!-- COLORS -->
      <!-- Export PrimaryColor -->
      <Color x:Key="PrimaryColor">#D8540F</Color>
      <!-- Export PrimaryColorDark -->
      <Color x:Key="PrimaryColorDark">#B94913</Color>
      <!-- Export PrimaryColorLight -->
      <Color x:Key="PrimaryColorLight">#E69B16</Color>


      <!-- Export AccentColor -->
      <Color x:Key="AccentColor">#68A6AB</Color>
      <!--D9E2D4-->

      <!-- COMPLEMENT COLORS -->
      <Color x:Key="ComplementColor">#D9E2D4</Color>
      <!--<Color x:Key="ComplementColorDark">#272f36</Color>
      <Color x:Key="ComplementColorDarker">#1f252a</Color>-->

      <!--
      
.accent-light          { background: #FFD180; } 
.accent-tint           { background: #FFBC66; } 
.accent-shade          { background: #FA9933; }  
      -->

      <!--00BCD4-->
      <!-- Export InverseTextColor -->
      <Color x:Key="ButtonTextColor">White</Color>

      <!-- Export PrimaryTextColor -->
      <Color x:Key="PrimaryTextColor">#212121</Color>
      <!-- Export SecondaryTextColor -->
      <Color x:Key="SecondaryTextColor">#727272</Color>

      <!-- Export IconsColor -->
      <Color x:Key="IconsColor">#727272</Color>
      <!-- Export DividerColor -->
      <Color x:Key="DividerColor">#BDBDBD</Color>
      <!-- Export WindowBackgroundColor -->
      <Color x:Key="WindowBackgroundColor">White</Color>


      <Color x:Key="TranslucidBlack">#44000000</Color>
      <Color x:Key="TranslucidWhite">#22ffffff</Color>

      <!-- INDICATOR COLORS -->
      <!--<Color x:Key="OkColor">#22c064</Color>
      <Color x:Key="ErrorColor">Red</Color>
      <Color x:Key="WarningColor">#ffc107</Color>-->


      <converters:OpacityColorConverter x:Key="TransparentAccentColor" Color="{StaticResource AccentColor}" Opacity="0.95" />


      <Color x:Key="ListViewSeparatorColor">#77CCCCCC</Color>
      <!--
      <Color x:Key="ListViewItemTextColor">#FF212121</Color>
      <Color x:Key="PlaceholderColor">#22ffffff</Color>
      <Color x:Key="PlaceholderColorEntry">#77FFFFFF</Color>
      <Color x:Key="LightBorderColor">#FFF</Color>

      <Color x:Key="ArtinaEntryBorderBotomColor">#2C2F35</Color>

      <Color x:Key="SaveButtonColor">#22c064</Color>
      <Color x:Key="DeleteButtonColor">#D50000</Color>
      -->


      <!-- BASE  UNITS VALUES -->
      <x:Double x:Key="BaseFontSize">16</x:Double>
      <x:Double x:Key="BaseButtonHeight">44</x:Double>
      <x:Double x:Key="BaseButtonBorderRadius">22</x:Double>
      <x:Double x:Key="ParallaxImageHeight">260</x:Double>

      <!-- STATIC IMAGES -->
      <FileImageSource x:Key="BrandBackground">logo_background.jpg</FileImageSource>
      <!--<FileImageSource x:Key="BrainBackground">brain.jpg</FileImageSource>
      <FileImageSource x:Key="BrainBackground">brain_alternate.png</FileImageSource>-->

      <FileImageSource x:Key="BrandImage">logo.png</FileImageSource>


      <!-- IMPLICIT STYLES -->
      <Style TargetType="NavigationPage">
        <Setter Property="BarBackgroundColor" Value="{StaticResource PrimaryColor}" />
        <Setter Property="BarTextColor" Value="White" />
      </Style>
      <Style TargetType="Frame">
        <Setter Property="OutlineColor" Value="{StaticResource PrimaryColor}" />
      </Style>

      <Style TargetType="Entry">
        <Setter Property="TextColor" Value="{StaticResource SecondaryTextColor}" />
      </Style>

      <Style TargetType="ActivityIndicator">
        <Setter Property="Color" Value="{StaticResource AccentColor}" />
      </Style>

      <Style TargetType="ContentPage">
        <Setter Property="BackgroundColor" Value="{StaticResource WindowBackgroundColor}" />
      </Style>

      <Style TargetType="ContentPage" x:Key="BackgroundImageTemplate">
        <Setter Property="BackgroundColor" Value="{StaticResource WindowBackgroundColor}" />
        <Setter Property="ControlTemplate">
          <Setter.Value>
            <ControlTemplate x:Key="BackgroundImageTemplate">
              <Grid>
                <Grid Padding="0,0,0,0" BackgroundColor="Black">

                  <ff:CachedImage x:Name="background" DownsampleToViewSize="True" Source="menu_background.jpg" 
                          HorizontalOptions="Fill" VerticalOptions="Fill"
                          Aspect="AspectFill"
                          Opacity=".6" />

                </Grid>

                <ContentPresenter />
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="xamarin:NavigationPage.HasNavigationBar" Value="False" />
      </Style>


      <Style TargetType="ContentView">
        <Setter Property="BackgroundColor" Value="{StaticResource WindowBackgroundColor}" />
      </Style>

      <Style TargetType="Label">
        <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
        <Setter Property="TextColor" Value="{StaticResource SecondaryTextColor}" />
      </Style>

      <Style TargetType="ListView">
        <Setter Property="SeparatorColor" Value="{StaticResource ListViewSeparatorColor}" />
        <Setter Property="SeparatorVisibility" Value="Default" />
      </Style>

      <!--<Style TargetType="TableView">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="artina:TableViewProperties.HeaderFooterTextColor" Value="{StaticResource AccentColor}"/>
      </Style>

      <Style TargetType="ProgressBar">
        <Setter Property="artina:ProgressBarProperties.TintColor" Value="{StaticResource AccentColor}"/>
      </Style>

      <Style TargetType="Slider">
        <Setter Property="artina:SliderProperties.TintColor" Value="{StaticResource AccentColor}"/>
      </Style>

      <Style TargetType="TextCell">
        <Setter Property="TextColor" Value="{ StaticResource AccentColor }" />
      </Style>-->

      <Style TargetType="Button">
        <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
        <Setter Property="BorderRadius" Value="22" />
        <Setter Property="BorderWidth"	Value="0" />
        <Setter Property="BorderColor"	Value="Transparent" />
        <Setter Property="HeightRequest" Value="{StaticResource BaseButtonHeight}"/>

        <!-- 
				Mimic Android Buttons background color 
				If no background color is set, 
				the button won't render with height as specified here
				-->
        <Setter Property="BackgroundColor">
          <Setter.Value>
            <OnPlatform x:TypeArguments="Color" Android="#d6d6d6" />
          </Setter.Value>
        </Setter>
      </Style>

      <Style TargetType="components:Button">
        <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
        <Setter Property="BorderRadius" Value="22" />
        <Setter Property="BorderWidth"	Value="0" />
        <Setter Property="BorderColor"	Value="Transparent" />
        <Setter Property="HeightRequest" Value="{StaticResource BaseButtonHeight}"/>

        <!-- 
				Mimic Android Buttons background color 
				If no background color is set, 
				the button won't render with height as specified here
				-->
        <Setter Property="BackgroundColor">
          <Setter.Value>
            <OnPlatform x:TypeArguments="Color" Android="#d6d6d6" />
          </Setter.Value>
        </Setter>
      </Style>


      <!-- BASE STYLES -->
      <Style x:Key="FontIcon" TargetType="Label">
        <Setter Property="FontFamily" Value="{x:Static artina:FontAwesome.FontName}" />
        <Setter Property="TextColor" Value="{StaticResource ComplementColor}" />
      </Style>

      <Style x:Key="Icon_Loading" TargetType="Label" BasedOn="{StaticResource FontIcon}">
        <Setter Property="Text" Value="&#xf110;" />
      </Style>

      <Style x:Key="Icon_Lock" TargetType="Label" BasedOn="{StaticResource FontIcon}">
        <Setter Property="Text" Value="&#xf023;" />
      </Style>

      <Style x:Key="Icon_Profile" TargetType="Label" BasedOn="{StaticResource FontIcon}">
        <Setter Property="Text" Value="&#xf007;" />
      </Style>

      <Style x:Key="RoundedButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
        <Setter Property="BorderRadius" Value="22" />
        <Setter Property="HeightRequest" Value="{StaticResource BaseButtonHeight}"/>
      </Style>

      <Style x:Key="Horizontal1ptLineStyle" TargetType="BoxView">
        <Setter Property="HeightRequest" Value="1"/>
        <Setter Property="BackgroundColor" Value="#eee" />
      </Style>


      <!-- SPECIFIC STYLES -->
      <Style x:Key="Icon_Close" TargetType="Label" BasedOn="{StaticResource FontIcon}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="HorizontalOptions" Value="FillAndExpand"/>
        <Setter Property="VerticalOptions" Value="FillAndExpand"/>
        <Setter Property="Text" Value="&#xf00d;"/>
        <Setter Property="HorizontalTextAlignment" Value="Center"/>
        <Setter Property="VerticalTextAlignment" Value="Center"/>
        <Setter Property="TextColor" Value="White"/>
        <Setter Property="HeightRequest" Value="30"/>
        <Setter Property="WidthRequest" Value="30"/>
      </Style>

      <Style x:Key="Icon_Back" TargetType="Label" BasedOn="{StaticResource Icon_Close}">
        <Setter Property="Text" Value="&#xf104;"/>
      </Style>


      <!-- LOGINS STYLES -->
      <Style x:Key="PrimaryActionButtonStyle" TargetType="Button" BasedOn="{StaticResource RoundedButtonStyle}">
        <Setter Property="BackgroundColor" Value="{StaticResource TransparentAccentColor}"/>
        <Setter Property="TextColor" Value="{StaticResource ButtonTextColor}"/>
        <Setter Property="HeightRequest" Value="{StaticResource BaseButtonHeight}"/>
        <Setter Property="BorderRadius" Value="10"/>
      </Style>

      <Style x:Key="SecondaryActionButtonStyle" TargetType="Button" BasedOn="{StaticResource RoundedButtonStyle}">
        <Setter Property="BackgroundColor" Value="{StaticResource ComplementColor}"/>
        <Setter Property="TextColor" Value="{StaticResource ButtonTextColor}"/>
        <Setter Property="HeightRequest" Value="{StaticResource BaseButtonHeight}"/>
      </Style>


      <!--<Style x:Key="TransparentButtonStyle" TargetType="Button" BasedOn="{StaticResource RoundedButtonStyle}">
        <Setter Property="BackgroundColor" Value="Transparent"/>
        <Setter Property="TextColor" Value="{StaticResource ButtonTextColor}"/>
        <Setter Property="HeightRequest" Value="{StaticResource BaseButtonHeight}"/>
      </Style>-->

      <!-- ENTRY FIELDS -->
      <!--<Style x:Key="ArtinaEntryStyle" TargetType="Entry">
        <Setter Property="TextColor" Value="White" />
        <Setter Property="artina:EntryProperties.BorderStyle" Value="BottomLine"/>
        <Setter Property="artina:EntryProperties.BorderWidth" Value="1"/>
        <Style.Triggers>
          <Trigger TargetType="Entry"
            Property="IsFocused" Value="True">
            <Setter Property="artina:EntryProperties.BorderColor" Value="{StaticResource AccentColor}" />
          </Trigger>
        </Style.Triggers>
      </Style>

      <Style x:Key="LoginEntryStyle" TargetType="Entry">
        <Setter Property="TextColor" Value="White" />
        <Setter Property="BackgroundColor" Value="Transparent"/>
      </Style>

      <Style x:Key="ArtinaLoginEntryStyle" TargetType="Entry" BasedOn="{ StaticResource LoginEntryStyle }" >
        <Setter Property="artina:EntryProperties.BorderStyle" Value="BottomLine"/>
        <Setter Property="artina:EntryProperties.BorderColor" Value="{ StaticResource TranslucidWhite }"/>
        <Setter Property="artina:EntryProperties.PlaceholderColor" Value="{ StaticResource PlaceholderColorEntry }"/>
        <Style.Triggers>
          <Trigger TargetType="Entry" Property="IsFocused" Value="True">
            <Setter Property="artina:EntryProperties.BorderColor" Value="{ StaticResource AccentColor }" />
          </Trigger>
        </Style.Triggers>
      </Style>-->

      <!-- VALIDATIONS -->
      <!--<Style x:Key="ValidationEntryErrorStyle" TargetType="Label" >
        <Setter Property="BackgroundColor" Value="{ StaticResource ErrorColor }" />
        <Setter Property="TextColor" Value="White" />
        <Setter Property="FontSize" Value="12" />
      </Style>

      <Style x:Key="ValidationEntryWarningStyle" TargetType="Label" >
        <Setter Property="BackgroundColor" Value="{ StaticResource WarningColor }" />
        <Setter Property="TextColor" Value="White" />
        <Setter Property="FontSize" Value="12" />
      </Style>-->


      <!-- WALKTHROUGH -->
      <!--<Style x:Key="WalkthroughStepBaseStyle" TargetType="ContentPage">
        <Setter Property="BackgroundColor" Value="{StaticResource PrimaryColor}"/>
      </Style>

      <Style x:Key="WalkthroughStepStyle" TargetType="ContentPage" BasedOn="{StaticResource WalkthroughStepBaseStyle}">
        <Setter Property="Opacity" Value="1"/>
      </Style>

      <Style x:Key="WalkthroughStepIconStyle" TargetType="Label" BasedOn="{StaticResource FontIcon}">
        <Setter Property="HorizontalTextAlignment" Value="Center"/>
        <Setter Property="VerticalOptions" Value="CenterAndExpand"/>
        <Setter Property="FontSize" Value="72"/>
        <Setter Property="TextColor" Value="White" />
      </Style>-->

      <!-- SETTINGS -->
      <!--<Style x:Key="SaveButtonStyle" TargetType="Button" BasedOn="{StaticResource RoundedButtonStyle}">
        <Setter Property="BackgroundColor" Value="{StaticResource SaveButtonColor}"/>
        <Setter Property="TextColor" Value="#FFF"/>
        <Setter Property="HeightRequest" Value="{StaticResource BaseButtonHeight}"/>
      </Style>

      <Style x:Key="DeleteButtonStyle" TargetType="Button" BasedOn="{StaticResource RoundedButtonStyle}">
        <Setter Property="BackgroundColor" Value="{StaticResource DeleteButtonColor}"/>
        <Setter Property="TextColor" Value="#FFF"/>
        <Setter Property="HeightRequest" Value="{StaticResource BaseButtonHeight}"/>
      </Style>-->

      <!-- SOCIAL -->
      <!--<Style x:Key="SocialHeaderStyle" TargetType="Label" >
        <Setter Property="TranslationX" Value="20"/>
        <Setter Property="VerticalOptions" Value="CenterAndExpand"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HeightRequest" Value="46" />
        <Setter Property="VerticalTextAlignment" Value="Center" />
        <Setter Property="FontAttributes" Value="Bold" />
        <Setter Property="TextColor" Value="#FF1C1C1C"/>
      </Style>

      <Style x:Key="SocialHeaderStyleBorderBottomStyle" TargetType="Label" >
        <Setter Property="HeightRequest" Value="1" />
        <Setter Property="BackgroundColor" Value="#FFAAAAAA"/>
      </Style>


      <Style x:Key="ToolbarStyle" TargetType="Grid">
        <Setter Property="HeightRequest" Value="60"/>
        <Setter Property="ColumnSpacing" Value="0"/>
      </Style>-->

      <!-- BRAND BLOCK -->
      <!--<Style x:Key="BrandContainerStyle" TargetType="StackLayout" >
        <Setter Property="HorizontalOptions" Value="Start"/>
        <Setter Property="VerticalOptions" Value="Start"/>
      </Style>

      <Style x:Key="BrandNameStyle" TargetType="Label" >
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="TextColor" Value="White" />
      </Style>

      <Style x:Key="BrandNameOrnamentStyle" TargetType="BoxView" >
        <Setter Property="HeightRequest" Value="4"/>
        <Setter Property="VerticalOptions" Value="End"/>
        <Setter Property="HorizontalOptions" Value="Start"/>
        <Setter Property="WidthRequest" Value="40" />
        <Setter Property="BackgroundColor" Value="{StaticResource PrimaryColor}" />
      </Style>-->

      <!-- LAYOUT HELPERS -->
      <Style x:Key="Spacer" TargetType="BoxView">
        <Setter Property="BackgroundColor" Value="Transparent"/>
      </Style>

      <!--<Style x:Key="SpacerThemeShowCaseStyle" TargetType="BoxView" BasedOn="{ StaticResource Spacer }">
        <Setter Property="HeightRequest" Value="20"/>
      </Style>

      <Style x:Key="HorizontalRuleStyle" TargetType="BoxView">
        <Setter Property="BackgroundColor" Value="{StaticResource AccentColor}"/>
        <Setter Property="HeightRequest" Value="1"/>
      </Style>-->


      <!-- THEME -->
      <!--<Style TargetType="artina:CircleImage">
        <Setter Property="WidthRequest" Value="50" />
        <Setter Property="HeightRequest" Value="50" />
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="BorderColor" Value="{StaticResource AccentColor}"/>
      </Style>

      <Style x:Key="Avatar" TargetType="artina:CircleImage" >
        <Setter Property="WidthRequest" Value="50" />
        <Setter Property="HeightRequest" Value="50" />
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="BorderColor" Value="{StaticResource AccentColor}"/>
      </Style>

      <Style x:Key="AvatarXSmall" TargetType="artina:CircleImage" BasedOn="{ StaticResource Avatar }">
        <Setter Property="WidthRequest" Value="36" />
        <Setter Property="HeightRequest" Value="36" />
        <Setter Property="BorderThickness" Value="2"/>
      </Style>

      <Style x:Key="AvatarSmall" TargetType="artina:CircleImage" BasedOn="{ StaticResource Avatar }">
        <Setter Property="WidthRequest" Value="44" />
        <Setter Property="HeightRequest" Value="44" />
      </Style>

      <Style x:Key="AvatarLarge" TargetType="artina:CircleImage" BasedOn="{ StaticResource Avatar }">
        <Setter Property="WidthRequest" Value="110" />
        <Setter Property="HeightRequest" Value="110" />
      </Style>-->

    </ResourceDictionary>
  </Application.Resources>
</Application>